"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDirection = exports.t = exports.availableLanguages = exports.getSelectLanguages = exports.getLanguagesList = exports.redirectTo = exports.getCurrentLanguage = exports.getParams = void 0;
const is_1 = require("../is");
const object_1 = require("../object");
const url_1 = require("../url");
const languages_1 = require("../languages");
function getParams(url, index = 0) {
    if (!url) {
        url = (0, url_1.getLocation)().pathname;
    }
    if ((0, is_1.isString)(url)) {
        if (url.indexOf('?') > -1) {
            url = url.substr(0, url.indexOf('?'));
        }
        const params = url.split('/');
        params.shift();
        if (params[params.length - 1] === '') {
            params.pop();
        }
        if (index) {
            if ((0, is_1.isLanguage)(params[0])) {
                index += 1;
            }
            if ((0, is_1.isDefined)(params[index])) {
                return params[index];
            }
        }
        return params;
    }
    return '';
}
exports.getParams = getParams;
const getCurrentLanguage = (url, defaultLanguage = 'en-US') => {
    const params = getParams(url || '');
    return params && (0, is_1.isLanguage)(params[0]) ? params[0] : defaultLanguage;
};
exports.getCurrentLanguage = getCurrentLanguage;
function redirectTo(url = '/', includeLanguage) {
    if ((0, is_1.isBrowser)()) {
        const { pathname } = window.location;
        const language = (0, exports.getCurrentLanguage)();
        let slash = '/';
        if (url === '_self') {
            if ((0, is_1.isLanguage)(includeLanguage)) {
                const segments = pathname.split(slash).filter(v => v);
                if ((0, is_1.isLanguage)(segments[0])) {
                    segments[0] = includeLanguage;
                }
                window.location.href = `${slash}${segments.join('/')}`;
            }
            else {
                window.location.href = pathname;
            }
        }
        else if (includeLanguage) {
            if (url[0] === '/') {
                slash = '';
            }
            window.location.href = `/${language}${slash}${url}`;
        }
        else {
            window.location.href = url;
        }
    }
}
exports.redirectTo = redirectTo;
const getLanguagesList = () => {
    return languages_1.languagesList;
};
exports.getLanguagesList = getLanguagesList;
const getSelectLanguages = (list) => {
    const languages = [];
    const currentLanguage = (0, exports.getCurrentLanguage)();
    list.forEach((language) => {
        languages.push({
            option: languages_1.languagesList[language].name,
            value: languages_1.languagesList[language].lang,
            selected: language === currentLanguage
        });
    });
    return languages;
};
exports.getSelectLanguages = getSelectLanguages;
const availableLanguages = (join = true) => {
    const listOfLanguages = Object.keys(languages_1.languagesList);
    if (join) {
        return listOfLanguages.join('|');
    }
    return listOfLanguages;
};
exports.availableLanguages = availableLanguages;
function t(key, __) {
    return (0, object_1.pick)(key, __);
}
exports.t = t;
function getDirection(language, value1, value2) {
    if (!(0, is_1.isLanguage)(language)) {
        language = (0, exports.getCurrentLanguage)();
    }
    if (!value1) {
        value1 = 'rtl';
    }
    if (!value2) {
        value2 = 'ltr';
    }
    return language === 'ar' ? value1 : value2;
}
exports.getDirection = getDirection;
