"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../index");
describe('#arrayIn', () => {
    it('should return true if a value from array exists on string', () => {
        const whitelist = ['login'];
        const fakeWhitelist = ['getUsers'];
        const query = `
      mutation {
        login(input: {email: "carlos.santana@dev.education", password: "12345678"}) {
          token
        }
      }
    `;
        expect((0, index_1.arrayIn)(whitelist, query)).toBe(true);
        expect((0, index_1.arrayIn)(fakeWhitelist, query)).toBe(false);
    });
});
describe('#capitalize', () => {
    it('should return a capitalized string', () => {
        expect((0, index_1.capitalize)('fogg')).toBe('Fogg');
        expect((0, index_1.capitalize)('f')).toBe('F');
    });
});
describe('#camelCase', () => {
    it('should return a camelCased string', () => {
        expect((0, index_1.camelCase)('Foo Bar')).toBe('fooBar');
        expect((0, index_1.camelCase)('--foo-bar--')).toBe('fooBar');
        expect((0, index_1.camelCase)('__FOO_BAR__')).toBe('fooBar');
    });
});
describe('#pluralify', () => {
    it('should return singular value', () => {
        expect((0, index_1.pluralify)('Entry', 'Entries', 1)).toBe('Entry');
    });
    it('should return plural', () => {
        expect((0, index_1.pluralify)('Entry', 'Entries', 0)).toBe('Entries');
        expect((0, index_1.pluralify)('Entry', 'Entries', 2)).toBe('Entries');
    });
});
